---
# Add a Jenkins repository key from https://pkg.jenkins.io/debian/jenkins-ci.org.key
- name: Adding Jenkins repository key
  become: yes
  apt_key: data="{{ lookup('file', 'jenkins-ci.org.key') }}" state=present

# Add a Jenkins repository
- name: Adding a Jenkins repository
  become: yes
  apt_repository: repo='{{ jenkins.repository }}' state=present update_cache=yes

# Install Jenkins
- name: Installing Jenkins
  become: yes
  apt: pkg=jenkins state=latest update_cache=yes cache_valid_time=86400

# Wait for downloading the Jenkins CLI
- name: Waiting to download Jenkins CLI
  wait_for: port=8080 delay={{ startup_delay_s | default(20) }}

# Create Jenkins CLI destination directory
- name: Creating a directory for Jenkins CLI
  become: yes
  action: file path={{ jenkins.destination }} state=directory

# Install Jenkins CLI from Jenkins localhost
- name: Installing Jenkins CLI
  become: yes
  action: get_url url=http://localhost:8080/jnlpJars/jenkins-cli.jar dest={{ jenkins.cli_destination }} mode=0440

# Disable Security
- name: Disabling Jenkins Security
  shell: chmod 777 /etc/default/jenkins

- name: Disabling Jenkins Security
  shell: echo "JAVA_ARGS=\"-Djenkins.install.runSetupWizard=false\"" >> /etc/default/jenkins

- name: Disabling Jenkins Security
  shell: ex +g/useSecurity/d +g/authorizationStrategy/d -scwq {{ jenkins.library }}/config.xml
  become: yes

# Restart Jenkins
- service:
    name: jenkins
    state: restarted

- name: Waiting for Jenkins to Restart
  wait_for:
    port: 8080
    delay: 20

# Install all plugins
- name: Installing plugins in Jenkins
  become: yes
  shell: java -jar {{ jenkins.library }}/jenkins-cli.jar -s http://localhost:8080/ install-plugin {{item}}
  with_items:
    - git

# Restart Jenkins
- service:
    name: jenkins
    state: restarted

- name: Waiting for Jenkins to Restart
  wait_for:
    port: 8080
    delay: 20